// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.3
// source: types.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// messages
type EmptyStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyStruct) Reset() {
	*x = EmptyStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyStruct) ProtoMessage() {}

func (x *EmptyStruct) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyStruct.ProtoReflect.Descriptor instead.
func (*EmptyStruct) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{0}
}

type PrimitivesStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int8        int32                `protobuf:"zigzag32,1,opt,name=Int8,proto3" json:"Int8,omitempty"`
	Int16       int32                `protobuf:"zigzag32,2,opt,name=Int16,proto3" json:"Int16,omitempty"`
	Int32       int32                `protobuf:"zigzag32,3,opt,name=Int32,proto3" json:"Int32,omitempty"`
	Int32Fixed  int32                `protobuf:"fixed32,4,opt,name=Int32Fixed,proto3" json:"Int32Fixed,omitempty"`
	Int64       int64                `protobuf:"zigzag64,5,opt,name=Int64,proto3" json:"Int64,omitempty"`
	Int64Fixed  int64                `protobuf:"fixed64,6,opt,name=Int64Fixed,proto3" json:"Int64Fixed,omitempty"`
	Int         int64                `protobuf:"zigzag64,7,opt,name=Int,proto3" json:"Int,omitempty"`
	Byte        uint32               `protobuf:"varint,8,opt,name=Byte,proto3" json:"Byte,omitempty"`
	Uint8       uint32               `protobuf:"varint,9,opt,name=Uint8,proto3" json:"Uint8,omitempty"`
	Uint16      uint32               `protobuf:"varint,10,opt,name=Uint16,proto3" json:"Uint16,omitempty"`
	Uint32      uint32               `protobuf:"varint,11,opt,name=Uint32,proto3" json:"Uint32,omitempty"`
	Uint32Fixed uint32               `protobuf:"fixed32,12,opt,name=Uint32Fixed,proto3" json:"Uint32Fixed,omitempty"`
	Uint64      uint64               `protobuf:"varint,13,opt,name=Uint64,proto3" json:"Uint64,omitempty"`
	Uint64Fixed uint64               `protobuf:"fixed64,14,opt,name=Uint64Fixed,proto3" json:"Uint64Fixed,omitempty"`
	Uint        uint64               `protobuf:"varint,15,opt,name=Uint,proto3" json:"Uint,omitempty"`
	Str         string               `protobuf:"bytes,16,opt,name=Str,proto3" json:"Str,omitempty"`
	Bytes       []byte               `protobuf:"bytes,17,opt,name=Bytes,proto3" json:"Bytes,omitempty"`
	Time        *timestamp.Timestamp `protobuf:"bytes,18,opt,name=Time,proto3" json:"Time,omitempty"`
	Empty       *EmptyStruct         `protobuf:"bytes,19,opt,name=Empty,proto3" json:"Empty,omitempty"`
}

func (x *PrimitivesStruct) Reset() {
	*x = PrimitivesStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimitivesStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimitivesStruct) ProtoMessage() {}

func (x *PrimitivesStruct) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimitivesStruct.ProtoReflect.Descriptor instead.
func (*PrimitivesStruct) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{1}
}

func (x *PrimitivesStruct) GetInt8() int32 {
	if x != nil {
		return x.Int8
	}
	return 0
}

func (x *PrimitivesStruct) GetInt16() int32 {
	if x != nil {
		return x.Int16
	}
	return 0
}

func (x *PrimitivesStruct) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *PrimitivesStruct) GetInt32Fixed() int32 {
	if x != nil {
		return x.Int32Fixed
	}
	return 0
}

func (x *PrimitivesStruct) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *PrimitivesStruct) GetInt64Fixed() int64 {
	if x != nil {
		return x.Int64Fixed
	}
	return 0
}

func (x *PrimitivesStruct) GetInt() int64 {
	if x != nil {
		return x.Int
	}
	return 0
}

func (x *PrimitivesStruct) GetByte() uint32 {
	if x != nil {
		return x.Byte
	}
	return 0
}

func (x *PrimitivesStruct) GetUint8() uint32 {
	if x != nil {
		return x.Uint8
	}
	return 0
}

func (x *PrimitivesStruct) GetUint16() uint32 {
	if x != nil {
		return x.Uint16
	}
	return 0
}

func (x *PrimitivesStruct) GetUint32() uint32 {
	if x != nil {
		return x.Uint32
	}
	return 0
}

func (x *PrimitivesStruct) GetUint32Fixed() uint32 {
	if x != nil {
		return x.Uint32Fixed
	}
	return 0
}

func (x *PrimitivesStruct) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

func (x *PrimitivesStruct) GetUint64Fixed() uint64 {
	if x != nil {
		return x.Uint64Fixed
	}
	return 0
}

func (x *PrimitivesStruct) GetUint() uint64 {
	if x != nil {
		return x.Uint
	}
	return 0
}

func (x *PrimitivesStruct) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *PrimitivesStruct) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *PrimitivesStruct) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *PrimitivesStruct) GetEmpty() *EmptyStruct {
	if x != nil {
		return x.Empty
	}
	return nil
}

type ShortArraysStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeAr []*timestamp.Timestamp `protobuf:"bytes,1,rep,name=TimeAr,proto3" json:"TimeAr,omitempty"`
}

func (x *ShortArraysStruct) Reset() {
	*x = ShortArraysStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortArraysStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortArraysStruct) ProtoMessage() {}

func (x *ShortArraysStruct) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortArraysStruct.ProtoReflect.Descriptor instead.
func (*ShortArraysStruct) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{2}
}

func (x *ShortArraysStruct) GetTimeAr() []*timestamp.Timestamp {
	if x != nil {
		return x.TimeAr
	}
	return nil
}

type ArraysStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int8Ar        []int32                `protobuf:"zigzag32,1,rep,packed,name=Int8Ar,proto3" json:"Int8Ar,omitempty"`
	Int16Ar       []int32                `protobuf:"zigzag32,2,rep,packed,name=Int16Ar,proto3" json:"Int16Ar,omitempty"`
	Int32Ar       []int32                `protobuf:"zigzag32,3,rep,packed,name=Int32Ar,proto3" json:"Int32Ar,omitempty"`
	Int32FixedAr  []int32                `protobuf:"fixed32,4,rep,packed,name=Int32FixedAr,proto3" json:"Int32FixedAr,omitempty"`
	Int64Ar       []int64                `protobuf:"zigzag64,5,rep,packed,name=Int64Ar,proto3" json:"Int64Ar,omitempty"`
	Int64FixedAr  []int64                `protobuf:"fixed64,6,rep,packed,name=Int64FixedAr,proto3" json:"Int64FixedAr,omitempty"`
	IntAr         []int64                `protobuf:"zigzag64,7,rep,packed,name=IntAr,proto3" json:"IntAr,omitempty"`
	ByteAr        []byte                 `protobuf:"bytes,8,opt,name=ByteAr,proto3" json:"ByteAr,omitempty"`
	Uint8Ar       []byte                 `protobuf:"bytes,9,opt,name=Uint8Ar,proto3" json:"Uint8Ar,omitempty"`
	Uint16Ar      []uint32               `protobuf:"varint,10,rep,packed,name=Uint16Ar,proto3" json:"Uint16Ar,omitempty"`
	Uint32Ar      []uint32               `protobuf:"varint,11,rep,packed,name=Uint32Ar,proto3" json:"Uint32Ar,omitempty"`
	Uint32FixedAr []uint32               `protobuf:"fixed32,12,rep,packed,name=Uint32FixedAr,proto3" json:"Uint32FixedAr,omitempty"`
	Uint64Ar      []uint64               `protobuf:"varint,13,rep,packed,name=Uint64Ar,proto3" json:"Uint64Ar,omitempty"`
	Uint64FixedAr []uint64               `protobuf:"fixed64,14,rep,packed,name=Uint64FixedAr,proto3" json:"Uint64FixedAr,omitempty"`
	UintAr        []uint64               `protobuf:"varint,15,rep,packed,name=UintAr,proto3" json:"UintAr,omitempty"`
	StrAr         []string               `protobuf:"bytes,16,rep,name=StrAr,proto3" json:"StrAr,omitempty"`
	BytesAr       [][]byte               `protobuf:"bytes,17,rep,name=BytesAr,proto3" json:"BytesAr,omitempty"`
	TimeAr        []*timestamp.Timestamp `protobuf:"bytes,18,rep,name=TimeAr,proto3" json:"TimeAr,omitempty"`
	EmptyAr       []*EmptyStruct         `protobuf:"bytes,19,rep,name=EmptyAr,proto3" json:"EmptyAr,omitempty"`
}

func (x *ArraysStruct) Reset() {
	*x = ArraysStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArraysStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArraysStruct) ProtoMessage() {}

func (x *ArraysStruct) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArraysStruct.ProtoReflect.Descriptor instead.
func (*ArraysStruct) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{3}
}

func (x *ArraysStruct) GetInt8Ar() []int32 {
	if x != nil {
		return x.Int8Ar
	}
	return nil
}

func (x *ArraysStruct) GetInt16Ar() []int32 {
	if x != nil {
		return x.Int16Ar
	}
	return nil
}

func (x *ArraysStruct) GetInt32Ar() []int32 {
	if x != nil {
		return x.Int32Ar
	}
	return nil
}

func (x *ArraysStruct) GetInt32FixedAr() []int32 {
	if x != nil {
		return x.Int32FixedAr
	}
	return nil
}

func (x *ArraysStruct) GetInt64Ar() []int64 {
	if x != nil {
		return x.Int64Ar
	}
	return nil
}

func (x *ArraysStruct) GetInt64FixedAr() []int64 {
	if x != nil {
		return x.Int64FixedAr
	}
	return nil
}

func (x *ArraysStruct) GetIntAr() []int64 {
	if x != nil {
		return x.IntAr
	}
	return nil
}

func (x *ArraysStruct) GetByteAr() []byte {
	if x != nil {
		return x.ByteAr
	}
	return nil
}

func (x *ArraysStruct) GetUint8Ar() []byte {
	if x != nil {
		return x.Uint8Ar
	}
	return nil
}

func (x *ArraysStruct) GetUint16Ar() []uint32 {
	if x != nil {
		return x.Uint16Ar
	}
	return nil
}

func (x *ArraysStruct) GetUint32Ar() []uint32 {
	if x != nil {
		return x.Uint32Ar
	}
	return nil
}

func (x *ArraysStruct) GetUint32FixedAr() []uint32 {
	if x != nil {
		return x.Uint32FixedAr
	}
	return nil
}

func (x *ArraysStruct) GetUint64Ar() []uint64 {
	if x != nil {
		return x.Uint64Ar
	}
	return nil
}

func (x *ArraysStruct) GetUint64FixedAr() []uint64 {
	if x != nil {
		return x.Uint64FixedAr
	}
	return nil
}

func (x *ArraysStruct) GetUintAr() []uint64 {
	if x != nil {
		return x.UintAr
	}
	return nil
}

func (x *ArraysStruct) GetStrAr() []string {
	if x != nil {
		return x.StrAr
	}
	return nil
}

func (x *ArraysStruct) GetBytesAr() [][]byte {
	if x != nil {
		return x.BytesAr
	}
	return nil
}

func (x *ArraysStruct) GetTimeAr() []*timestamp.Timestamp {
	if x != nil {
		return x.TimeAr
	}
	return nil
}

func (x *ArraysStruct) GetEmptyAr() []*EmptyStruct {
	if x != nil {
		return x.EmptyAr
	}
	return nil
}

type ArraysArraysStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int8ArAr        []*Int8List          `protobuf:"bytes,1,rep,name=Int8ArAr,proto3" json:"Int8ArAr,omitempty"`
	Int16ArAr       []*Int16List         `protobuf:"bytes,2,rep,name=Int16ArAr,proto3" json:"Int16ArAr,omitempty"`
	Int32ArAr       []*Int32List         `protobuf:"bytes,3,rep,name=Int32ArAr,proto3" json:"Int32ArAr,omitempty"`
	Int32FixedArAr  []*Fixed32Int32List  `protobuf:"bytes,4,rep,name=Int32FixedArAr,proto3" json:"Int32FixedArAr,omitempty"`
	Int64ArAr       []*Int64List         `protobuf:"bytes,5,rep,name=Int64ArAr,proto3" json:"Int64ArAr,omitempty"`
	Int64FixedArAr  []*Fixed64Int64List  `protobuf:"bytes,6,rep,name=Int64FixedArAr,proto3" json:"Int64FixedArAr,omitempty"`
	IntArAr         []*IntList           `protobuf:"bytes,7,rep,name=IntArAr,proto3" json:"IntArAr,omitempty"`
	ByteArAr        [][]byte             `protobuf:"bytes,8,rep,name=ByteArAr,proto3" json:"ByteArAr,omitempty"`
	Uint8ArAr       [][]byte             `protobuf:"bytes,9,rep,name=Uint8ArAr,proto3" json:"Uint8ArAr,omitempty"`
	Uint16ArAr      []*Uint16List        `protobuf:"bytes,10,rep,name=Uint16ArAr,proto3" json:"Uint16ArAr,omitempty"`
	Uint32ArAr      []*Uint32List        `protobuf:"bytes,11,rep,name=Uint32ArAr,proto3" json:"Uint32ArAr,omitempty"`
	Uint32FixedArAr []*Fixed32Uint32List `protobuf:"bytes,12,rep,name=Uint32FixedArAr,proto3" json:"Uint32FixedArAr,omitempty"`
	Uint64ArAr      []*Uint64List        `protobuf:"bytes,13,rep,name=Uint64ArAr,proto3" json:"Uint64ArAr,omitempty"`
	Uint64FixedArAr []*Fixed64Uint64List `protobuf:"bytes,14,rep,name=Uint64FixedArAr,proto3" json:"Uint64FixedArAr,omitempty"`
	UintArAr        []*UintList          `protobuf:"bytes,15,rep,name=UintArAr,proto3" json:"UintArAr,omitempty"`
	StrArAr         []*StringList        `protobuf:"bytes,16,rep,name=StrArAr,proto3" json:"StrArAr,omitempty"`
	BytesArAr       []*BytesList         `protobuf:"bytes,17,rep,name=BytesArAr,proto3" json:"BytesArAr,omitempty"`
	TimeArAr        []*TimeList          `protobuf:"bytes,18,rep,name=TimeArAr,proto3" json:"TimeArAr,omitempty"`
	EmptyArAr       []*EmptyStructList   `protobuf:"bytes,19,rep,name=EmptyArAr,proto3" json:"EmptyArAr,omitempty"`
}

func (x *ArraysArraysStruct) Reset() {
	*x = ArraysArraysStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArraysArraysStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArraysArraysStruct) ProtoMessage() {}

func (x *ArraysArraysStruct) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArraysArraysStruct.ProtoReflect.Descriptor instead.
func (*ArraysArraysStruct) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{4}
}

func (x *ArraysArraysStruct) GetInt8ArAr() []*Int8List {
	if x != nil {
		return x.Int8ArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetInt16ArAr() []*Int16List {
	if x != nil {
		return x.Int16ArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetInt32ArAr() []*Int32List {
	if x != nil {
		return x.Int32ArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetInt32FixedArAr() []*Fixed32Int32List {
	if x != nil {
		return x.Int32FixedArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetInt64ArAr() []*Int64List {
	if x != nil {
		return x.Int64ArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetInt64FixedArAr() []*Fixed64Int64List {
	if x != nil {
		return x.Int64FixedArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetIntArAr() []*IntList {
	if x != nil {
		return x.IntArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetByteArAr() [][]byte {
	if x != nil {
		return x.ByteArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetUint8ArAr() [][]byte {
	if x != nil {
		return x.Uint8ArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetUint16ArAr() []*Uint16List {
	if x != nil {
		return x.Uint16ArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetUint32ArAr() []*Uint32List {
	if x != nil {
		return x.Uint32ArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetUint32FixedArAr() []*Fixed32Uint32List {
	if x != nil {
		return x.Uint32FixedArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetUint64ArAr() []*Uint64List {
	if x != nil {
		return x.Uint64ArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetUint64FixedArAr() []*Fixed64Uint64List {
	if x != nil {
		return x.Uint64FixedArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetUintArAr() []*UintList {
	if x != nil {
		return x.UintArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetStrArAr() []*StringList {
	if x != nil {
		return x.StrArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetBytesArAr() []*BytesList {
	if x != nil {
		return x.BytesArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetTimeArAr() []*TimeList {
	if x != nil {
		return x.TimeArAr
	}
	return nil
}

func (x *ArraysArraysStruct) GetEmptyArAr() []*EmptyStructList {
	if x != nil {
		return x.EmptyArAr
	}
	return nil
}

type SlicesStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int8Sl        []int32                `protobuf:"zigzag32,1,rep,packed,name=Int8Sl,proto3" json:"Int8Sl,omitempty"`
	Int16Sl       []int32                `protobuf:"zigzag32,2,rep,packed,name=Int16Sl,proto3" json:"Int16Sl,omitempty"`
	Int32Sl       []int32                `protobuf:"zigzag32,3,rep,packed,name=Int32Sl,proto3" json:"Int32Sl,omitempty"`
	Int32FixedSl  []int32                `protobuf:"fixed32,4,rep,packed,name=Int32FixedSl,proto3" json:"Int32FixedSl,omitempty"`
	Int64Sl       []int64                `protobuf:"zigzag64,5,rep,packed,name=Int64Sl,proto3" json:"Int64Sl,omitempty"`
	Int64FixedSl  []int64                `protobuf:"fixed64,6,rep,packed,name=Int64FixedSl,proto3" json:"Int64FixedSl,omitempty"`
	IntSl         []int64                `protobuf:"zigzag64,7,rep,packed,name=IntSl,proto3" json:"IntSl,omitempty"`
	ByteSl        []byte                 `protobuf:"bytes,8,opt,name=ByteSl,proto3" json:"ByteSl,omitempty"`
	Uint8Sl       []byte                 `protobuf:"bytes,9,opt,name=Uint8Sl,proto3" json:"Uint8Sl,omitempty"`
	Uint16Sl      []uint32               `protobuf:"varint,10,rep,packed,name=Uint16Sl,proto3" json:"Uint16Sl,omitempty"`
	Uint32Sl      []uint32               `protobuf:"varint,11,rep,packed,name=Uint32Sl,proto3" json:"Uint32Sl,omitempty"`
	Uint32FixedSl []uint32               `protobuf:"fixed32,12,rep,packed,name=Uint32FixedSl,proto3" json:"Uint32FixedSl,omitempty"`
	Uint64Sl      []uint64               `protobuf:"varint,13,rep,packed,name=Uint64Sl,proto3" json:"Uint64Sl,omitempty"`
	Uint64FixedSl []uint64               `protobuf:"fixed64,14,rep,packed,name=Uint64FixedSl,proto3" json:"Uint64FixedSl,omitempty"`
	UintSl        []uint64               `protobuf:"varint,15,rep,packed,name=UintSl,proto3" json:"UintSl,omitempty"`
	StrSl         []string               `protobuf:"bytes,16,rep,name=StrSl,proto3" json:"StrSl,omitempty"`
	BytesSl       [][]byte               `protobuf:"bytes,17,rep,name=BytesSl,proto3" json:"BytesSl,omitempty"`
	TimeSl        []*timestamp.Timestamp `protobuf:"bytes,18,rep,name=TimeSl,proto3" json:"TimeSl,omitempty"`
	EmptySl       []*EmptyStruct         `protobuf:"bytes,19,rep,name=EmptySl,proto3" json:"EmptySl,omitempty"`
}

func (x *SlicesStruct) Reset() {
	*x = SlicesStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlicesStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlicesStruct) ProtoMessage() {}

func (x *SlicesStruct) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlicesStruct.ProtoReflect.Descriptor instead.
func (*SlicesStruct) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{5}
}

func (x *SlicesStruct) GetInt8Sl() []int32 {
	if x != nil {
		return x.Int8Sl
	}
	return nil
}

func (x *SlicesStruct) GetInt16Sl() []int32 {
	if x != nil {
		return x.Int16Sl
	}
	return nil
}

func (x *SlicesStruct) GetInt32Sl() []int32 {
	if x != nil {
		return x.Int32Sl
	}
	return nil
}

func (x *SlicesStruct) GetInt32FixedSl() []int32 {
	if x != nil {
		return x.Int32FixedSl
	}
	return nil
}

func (x *SlicesStruct) GetInt64Sl() []int64 {
	if x != nil {
		return x.Int64Sl
	}
	return nil
}

func (x *SlicesStruct) GetInt64FixedSl() []int64 {
	if x != nil {
		return x.Int64FixedSl
	}
	return nil
}

func (x *SlicesStruct) GetIntSl() []int64 {
	if x != nil {
		return x.IntSl
	}
	return nil
}

func (x *SlicesStruct) GetByteSl() []byte {
	if x != nil {
		return x.ByteSl
	}
	return nil
}

func (x *SlicesStruct) GetUint8Sl() []byte {
	if x != nil {
		return x.Uint8Sl
	}
	return nil
}

func (x *SlicesStruct) GetUint16Sl() []uint32 {
	if x != nil {
		return x.Uint16Sl
	}
	return nil
}

func (x *SlicesStruct) GetUint32Sl() []uint32 {
	if x != nil {
		return x.Uint32Sl
	}
	return nil
}

func (x *SlicesStruct) GetUint32FixedSl() []uint32 {
	if x != nil {
		return x.Uint32FixedSl
	}
	return nil
}

func (x *SlicesStruct) GetUint64Sl() []uint64 {
	if x != nil {
		return x.Uint64Sl
	}
	return nil
}

func (x *SlicesStruct) GetUint64FixedSl() []uint64 {
	if x != nil {
		return x.Uint64FixedSl
	}
	return nil
}

func (x *SlicesStruct) GetUintSl() []uint64 {
	if x != nil {
		return x.UintSl
	}
	return nil
}

func (x *SlicesStruct) GetStrSl() []string {
	if x != nil {
		return x.StrSl
	}
	return nil
}

func (x *SlicesStruct) GetBytesSl() [][]byte {
	if x != nil {
		return x.BytesSl
	}
	return nil
}

func (x *SlicesStruct) GetTimeSl() []*timestamp.Timestamp {
	if x != nil {
		return x.TimeSl
	}
	return nil
}

func (x *SlicesStruct) GetEmptySl() []*EmptyStruct {
	if x != nil {
		return x.EmptySl
	}
	return nil
}

type PointersStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int8Pt        int32                `protobuf:"zigzag32,1,opt,name=Int8Pt,proto3" json:"Int8Pt,omitempty"`
	Int16Pt       int32                `protobuf:"zigzag32,2,opt,name=Int16Pt,proto3" json:"Int16Pt,omitempty"`
	Int32Pt       int32                `protobuf:"zigzag32,3,opt,name=Int32Pt,proto3" json:"Int32Pt,omitempty"`
	Int32FixedPt  int32                `protobuf:"fixed32,4,opt,name=Int32FixedPt,proto3" json:"Int32FixedPt,omitempty"`
	Int64Pt       int64                `protobuf:"zigzag64,5,opt,name=Int64Pt,proto3" json:"Int64Pt,omitempty"`
	Int64FixedPt  int64                `protobuf:"fixed64,6,opt,name=Int64FixedPt,proto3" json:"Int64FixedPt,omitempty"`
	IntPt         int64                `protobuf:"zigzag64,7,opt,name=IntPt,proto3" json:"IntPt,omitempty"`
	BytePt        uint32               `protobuf:"varint,8,opt,name=BytePt,proto3" json:"BytePt,omitempty"`
	Uint8Pt       uint32               `protobuf:"varint,9,opt,name=Uint8Pt,proto3" json:"Uint8Pt,omitempty"`
	Uint16Pt      uint32               `protobuf:"varint,10,opt,name=Uint16Pt,proto3" json:"Uint16Pt,omitempty"`
	Uint32Pt      uint32               `protobuf:"varint,11,opt,name=Uint32Pt,proto3" json:"Uint32Pt,omitempty"`
	Uint32FixedPt uint32               `protobuf:"fixed32,12,opt,name=Uint32FixedPt,proto3" json:"Uint32FixedPt,omitempty"`
	Uint64Pt      uint64               `protobuf:"varint,13,opt,name=Uint64Pt,proto3" json:"Uint64Pt,omitempty"`
	Uint64FixedPt uint64               `protobuf:"fixed64,14,opt,name=Uint64FixedPt,proto3" json:"Uint64FixedPt,omitempty"`
	UintPt        uint64               `protobuf:"varint,15,opt,name=UintPt,proto3" json:"UintPt,omitempty"`
	StrPt         string               `protobuf:"bytes,16,opt,name=StrPt,proto3" json:"StrPt,omitempty"`
	BytesPt       []byte               `protobuf:"bytes,17,opt,name=BytesPt,proto3" json:"BytesPt,omitempty"`
	TimePt        *timestamp.Timestamp `protobuf:"bytes,18,opt,name=TimePt,proto3" json:"TimePt,omitempty"`
	EmptyPt       *EmptyStruct         `protobuf:"bytes,19,opt,name=EmptyPt,proto3" json:"EmptyPt,omitempty"`
}

func (x *PointersStruct) Reset() {
	*x = PointersStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointersStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointersStruct) ProtoMessage() {}

func (x *PointersStruct) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointersStruct.ProtoReflect.Descriptor instead.
func (*PointersStruct) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{6}
}

func (x *PointersStruct) GetInt8Pt() int32 {
	if x != nil {
		return x.Int8Pt
	}
	return 0
}

func (x *PointersStruct) GetInt16Pt() int32 {
	if x != nil {
		return x.Int16Pt
	}
	return 0
}

func (x *PointersStruct) GetInt32Pt() int32 {
	if x != nil {
		return x.Int32Pt
	}
	return 0
}

func (x *PointersStruct) GetInt32FixedPt() int32 {
	if x != nil {
		return x.Int32FixedPt
	}
	return 0
}

func (x *PointersStruct) GetInt64Pt() int64 {
	if x != nil {
		return x.Int64Pt
	}
	return 0
}

func (x *PointersStruct) GetInt64FixedPt() int64 {
	if x != nil {
		return x.Int64FixedPt
	}
	return 0
}

func (x *PointersStruct) GetIntPt() int64 {
	if x != nil {
		return x.IntPt
	}
	return 0
}

func (x *PointersStruct) GetBytePt() uint32 {
	if x != nil {
		return x.BytePt
	}
	return 0
}

func (x *PointersStruct) GetUint8Pt() uint32 {
	if x != nil {
		return x.Uint8Pt
	}
	return 0
}

func (x *PointersStruct) GetUint16Pt() uint32 {
	if x != nil {
		return x.Uint16Pt
	}
	return 0
}

func (x *PointersStruct) GetUint32Pt() uint32 {
	if x != nil {
		return x.Uint32Pt
	}
	return 0
}

func (x *PointersStruct) GetUint32FixedPt() uint32 {
	if x != nil {
		return x.Uint32FixedPt
	}
	return 0
}

func (x *PointersStruct) GetUint64Pt() uint64 {
	if x != nil {
		return x.Uint64Pt
	}
	return 0
}

func (x *PointersStruct) GetUint64FixedPt() uint64 {
	if x != nil {
		return x.Uint64FixedPt
	}
	return 0
}

func (x *PointersStruct) GetUintPt() uint64 {
	if x != nil {
		return x.UintPt
	}
	return 0
}

func (x *PointersStruct) GetStrPt() string {
	if x != nil {
		return x.StrPt
	}
	return ""
}

func (x *PointersStruct) GetBytesPt() []byte {
	if x != nil {
		return x.BytesPt
	}
	return nil
}

func (x *PointersStruct) GetTimePt() *timestamp.Timestamp {
	if x != nil {
		return x.TimePt
	}
	return nil
}

func (x *PointersStruct) GetEmptyPt() *EmptyStruct {
	if x != nil {
		return x.EmptyPt
	}
	return nil
}

type PointerSlicesStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int8PtSl        []int32                `protobuf:"zigzag32,1,rep,packed,name=Int8PtSl,proto3" json:"Int8PtSl,omitempty"`
	Int16PtSl       []int32                `protobuf:"zigzag32,2,rep,packed,name=Int16PtSl,proto3" json:"Int16PtSl,omitempty"`
	Int32PtSl       []int32                `protobuf:"zigzag32,3,rep,packed,name=Int32PtSl,proto3" json:"Int32PtSl,omitempty"`
	Int32FixedPtSl  []int32                `protobuf:"fixed32,4,rep,packed,name=Int32FixedPtSl,proto3" json:"Int32FixedPtSl,omitempty"`
	Int64PtSl       []int64                `protobuf:"zigzag64,5,rep,packed,name=Int64PtSl,proto3" json:"Int64PtSl,omitempty"`
	Int64FixedPtSl  []int64                `protobuf:"fixed64,6,rep,packed,name=Int64FixedPtSl,proto3" json:"Int64FixedPtSl,omitempty"`
	IntPtSl         []int64                `protobuf:"zigzag64,7,rep,packed,name=IntPtSl,proto3" json:"IntPtSl,omitempty"`
	BytePtSl        []byte                 `protobuf:"bytes,8,opt,name=BytePtSl,proto3" json:"BytePtSl,omitempty"`
	Uint8PtSl       []byte                 `protobuf:"bytes,9,opt,name=Uint8PtSl,proto3" json:"Uint8PtSl,omitempty"`
	Uint16PtSl      []uint32               `protobuf:"varint,10,rep,packed,name=Uint16PtSl,proto3" json:"Uint16PtSl,omitempty"`
	Uint32PtSl      []uint32               `protobuf:"varint,11,rep,packed,name=Uint32PtSl,proto3" json:"Uint32PtSl,omitempty"`
	Uint32FixedPtSl []uint32               `protobuf:"fixed32,12,rep,packed,name=Uint32FixedPtSl,proto3" json:"Uint32FixedPtSl,omitempty"`
	Uint64PtSl      []uint64               `protobuf:"varint,13,rep,packed,name=Uint64PtSl,proto3" json:"Uint64PtSl,omitempty"`
	Uint64FixedPtSl []uint64               `protobuf:"fixed64,14,rep,packed,name=Uint64FixedPtSl,proto3" json:"Uint64FixedPtSl,omitempty"`
	UintPtSl        []uint64               `protobuf:"varint,15,rep,packed,name=UintPtSl,proto3" json:"UintPtSl,omitempty"`
	StrPtSl         []string               `protobuf:"bytes,16,rep,name=StrPtSl,proto3" json:"StrPtSl,omitempty"`
	BytesPtSl       [][]byte               `protobuf:"bytes,17,rep,name=BytesPtSl,proto3" json:"BytesPtSl,omitempty"`
	TimePtSl        []*timestamp.Timestamp `protobuf:"bytes,18,rep,name=TimePtSl,proto3" json:"TimePtSl,omitempty"`
	EmptyPtSl       []*EmptyStruct         `protobuf:"bytes,19,rep,name=EmptyPtSl,proto3" json:"EmptyPtSl,omitempty"`
}

func (x *PointerSlicesStruct) Reset() {
	*x = PointerSlicesStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointerSlicesStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointerSlicesStruct) ProtoMessage() {}

func (x *PointerSlicesStruct) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointerSlicesStruct.ProtoReflect.Descriptor instead.
func (*PointerSlicesStruct) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{7}
}

func (x *PointerSlicesStruct) GetInt8PtSl() []int32 {
	if x != nil {
		return x.Int8PtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetInt16PtSl() []int32 {
	if x != nil {
		return x.Int16PtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetInt32PtSl() []int32 {
	if x != nil {
		return x.Int32PtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetInt32FixedPtSl() []int32 {
	if x != nil {
		return x.Int32FixedPtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetInt64PtSl() []int64 {
	if x != nil {
		return x.Int64PtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetInt64FixedPtSl() []int64 {
	if x != nil {
		return x.Int64FixedPtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetIntPtSl() []int64 {
	if x != nil {
		return x.IntPtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetBytePtSl() []byte {
	if x != nil {
		return x.BytePtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetUint8PtSl() []byte {
	if x != nil {
		return x.Uint8PtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetUint16PtSl() []uint32 {
	if x != nil {
		return x.Uint16PtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetUint32PtSl() []uint32 {
	if x != nil {
		return x.Uint32PtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetUint32FixedPtSl() []uint32 {
	if x != nil {
		return x.Uint32FixedPtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetUint64PtSl() []uint64 {
	if x != nil {
		return x.Uint64PtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetUint64FixedPtSl() []uint64 {
	if x != nil {
		return x.Uint64FixedPtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetUintPtSl() []uint64 {
	if x != nil {
		return x.UintPtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetStrPtSl() []string {
	if x != nil {
		return x.StrPtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetBytesPtSl() [][]byte {
	if x != nil {
		return x.BytesPtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetTimePtSl() []*timestamp.Timestamp {
	if x != nil {
		return x.TimePtSl
	}
	return nil
}

func (x *PointerSlicesStruct) GetEmptyPtSl() []*EmptyStruct {
	if x != nil {
		return x.EmptyPtSl
	}
	return nil
}

type ComplexSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrField *PrimitivesStruct `protobuf:"bytes,1,opt,name=PrField,proto3" json:"PrField,omitempty"`
	ArField *ArraysStruct     `protobuf:"bytes,2,opt,name=ArField,proto3" json:"ArField,omitempty"`
	SlField *SlicesStruct     `protobuf:"bytes,3,opt,name=SlField,proto3" json:"SlField,omitempty"`
	PtField *PointersStruct   `protobuf:"bytes,4,opt,name=PtField,proto3" json:"PtField,omitempty"`
}

func (x *ComplexSt) Reset() {
	*x = ComplexSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplexSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplexSt) ProtoMessage() {}

func (x *ComplexSt) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplexSt.ProtoReflect.Descriptor instead.
func (*ComplexSt) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{8}
}

func (x *ComplexSt) GetPrField() *PrimitivesStruct {
	if x != nil {
		return x.PrField
	}
	return nil
}

func (x *ComplexSt) GetArField() *ArraysStruct {
	if x != nil {
		return x.ArField
	}
	return nil
}

func (x *ComplexSt) GetSlField() *SlicesStruct {
	if x != nil {
		return x.SlField
	}
	return nil
}

func (x *ComplexSt) GetPtField() *PointersStruct {
	if x != nil {
		return x.PtField
	}
	return nil
}

type EmbeddedSt1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimitivesStruct *PrimitivesStruct `protobuf:"bytes,1,opt,name=PrimitivesStruct,proto3" json:"PrimitivesStruct,omitempty"`
}

func (x *EmbeddedSt1) Reset() {
	*x = EmbeddedSt1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddedSt1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddedSt1) ProtoMessage() {}

func (x *EmbeddedSt1) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddedSt1.ProtoReflect.Descriptor instead.
func (*EmbeddedSt1) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{9}
}

func (x *EmbeddedSt1) GetPrimitivesStruct() *PrimitivesStruct {
	if x != nil {
		return x.PrimitivesStruct
	}
	return nil
}

type EmbeddedSt2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimitivesStruct *PrimitivesStruct `protobuf:"bytes,1,opt,name=PrimitivesStruct,proto3" json:"PrimitivesStruct,omitempty"`
	ArraysStruct     *ArraysStruct     `protobuf:"bytes,2,opt,name=ArraysStruct,proto3" json:"ArraysStruct,omitempty"`
	SlicesStruct     *SlicesStruct     `protobuf:"bytes,3,opt,name=SlicesStruct,proto3" json:"SlicesStruct,omitempty"`
	PointersStruct   *PointersStruct   `protobuf:"bytes,4,opt,name=PointersStruct,proto3" json:"PointersStruct,omitempty"`
}

func (x *EmbeddedSt2) Reset() {
	*x = EmbeddedSt2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddedSt2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddedSt2) ProtoMessage() {}

func (x *EmbeddedSt2) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddedSt2.ProtoReflect.Descriptor instead.
func (*EmbeddedSt2) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{10}
}

func (x *EmbeddedSt2) GetPrimitivesStruct() *PrimitivesStruct {
	if x != nil {
		return x.PrimitivesStruct
	}
	return nil
}

func (x *EmbeddedSt2) GetArraysStruct() *ArraysStruct {
	if x != nil {
		return x.ArraysStruct
	}
	return nil
}

func (x *EmbeddedSt2) GetSlicesStruct() *SlicesStruct {
	if x != nil {
		return x.SlicesStruct
	}
	return nil
}

func (x *EmbeddedSt2) GetPointersStruct() *PointersStruct {
	if x != nil {
		return x.PointersStruct
	}
	return nil
}

type EmbeddedSt3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimitivesStruct *PrimitivesStruct `protobuf:"bytes,1,opt,name=PrimitivesStruct,proto3" json:"PrimitivesStruct,omitempty"`
	ArraysStruct     *ArraysStruct     `protobuf:"bytes,2,opt,name=ArraysStruct,proto3" json:"ArraysStruct,omitempty"`
	SlicesStruct     *SlicesStruct     `protobuf:"bytes,3,opt,name=SlicesStruct,proto3" json:"SlicesStruct,omitempty"`
	PointersStruct   *PointersStruct   `protobuf:"bytes,4,opt,name=PointersStruct,proto3" json:"PointersStruct,omitempty"`
	EmptyStruct      *EmptyStruct      `protobuf:"bytes,5,opt,name=EmptyStruct,proto3" json:"EmptyStruct,omitempty"`
}

func (x *EmbeddedSt3) Reset() {
	*x = EmbeddedSt3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddedSt3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddedSt3) ProtoMessage() {}

func (x *EmbeddedSt3) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddedSt3.ProtoReflect.Descriptor instead.
func (*EmbeddedSt3) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{11}
}

func (x *EmbeddedSt3) GetPrimitivesStruct() *PrimitivesStruct {
	if x != nil {
		return x.PrimitivesStruct
	}
	return nil
}

func (x *EmbeddedSt3) GetArraysStruct() *ArraysStruct {
	if x != nil {
		return x.ArraysStruct
	}
	return nil
}

func (x *EmbeddedSt3) GetSlicesStruct() *SlicesStruct {
	if x != nil {
		return x.SlicesStruct
	}
	return nil
}

func (x *EmbeddedSt3) GetPointersStruct() *PointersStruct {
	if x != nil {
		return x.PointersStruct
	}
	return nil
}

func (x *EmbeddedSt3) GetEmptyStruct() *EmptyStruct {
	if x != nil {
		return x.EmptyStruct
	}
	return nil
}

type EmbeddedSt4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Foo1                int64             `protobuf:"zigzag64,1,opt,name=Foo1,proto3" json:"Foo1,omitempty"`
	PrimitivesStruct    *PrimitivesStruct `protobuf:"bytes,2,opt,name=PrimitivesStruct,proto3" json:"PrimitivesStruct,omitempty"`
	Foo2                string            `protobuf:"bytes,3,opt,name=Foo2,proto3" json:"Foo2,omitempty"`
	ArraysStructField   *ArraysStruct     `protobuf:"bytes,4,opt,name=ArraysStructField,proto3" json:"ArraysStructField,omitempty"`
	Foo3                []byte            `protobuf:"bytes,5,opt,name=Foo3,proto3" json:"Foo3,omitempty"`
	SlicesStruct        *SlicesStruct     `protobuf:"bytes,6,opt,name=SlicesStruct,proto3" json:"SlicesStruct,omitempty"`
	Foo4                bool              `protobuf:"varint,7,opt,name=Foo4,proto3" json:"Foo4,omitempty"`
	PointersStructField *PointersStruct   `protobuf:"bytes,8,opt,name=PointersStructField,proto3" json:"PointersStructField,omitempty"`
	Foo5                uint64            `protobuf:"varint,9,opt,name=Foo5,proto3" json:"Foo5,omitempty"`
}

func (x *EmbeddedSt4) Reset() {
	*x = EmbeddedSt4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddedSt4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddedSt4) ProtoMessage() {}

func (x *EmbeddedSt4) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddedSt4.ProtoReflect.Descriptor instead.
func (*EmbeddedSt4) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{12}
}

func (x *EmbeddedSt4) GetFoo1() int64 {
	if x != nil {
		return x.Foo1
	}
	return 0
}

func (x *EmbeddedSt4) GetPrimitivesStruct() *PrimitivesStruct {
	if x != nil {
		return x.PrimitivesStruct
	}
	return nil
}

func (x *EmbeddedSt4) GetFoo2() string {
	if x != nil {
		return x.Foo2
	}
	return ""
}

func (x *EmbeddedSt4) GetArraysStructField() *ArraysStruct {
	if x != nil {
		return x.ArraysStructField
	}
	return nil
}

func (x *EmbeddedSt4) GetFoo3() []byte {
	if x != nil {
		return x.Foo3
	}
	return nil
}

func (x *EmbeddedSt4) GetSlicesStruct() *SlicesStruct {
	if x != nil {
		return x.SlicesStruct
	}
	return nil
}

func (x *EmbeddedSt4) GetFoo4() bool {
	if x != nil {
		return x.Foo4
	}
	return false
}

func (x *EmbeddedSt4) GetPointersStructField() *PointersStruct {
	if x != nil {
		return x.PointersStructField
	}
	return nil
}

func (x *EmbeddedSt4) GetFoo5() uint64 {
	if x != nil {
		return x.Foo5
	}
	return 0
}

type EmbeddedSt5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Foo1                int64             `protobuf:"zigzag64,1,opt,name=Foo1,proto3" json:"Foo1,omitempty"`
	PrimitivesStruct    *PrimitivesStruct `protobuf:"bytes,2,opt,name=PrimitivesStruct,proto3" json:"PrimitivesStruct,omitempty"`
	Foo2                string            `protobuf:"bytes,3,opt,name=Foo2,proto3" json:"Foo2,omitempty"`
	ArraysStructField   *ArraysStruct     `protobuf:"bytes,4,opt,name=ArraysStructField,proto3" json:"ArraysStructField,omitempty"`
	Foo3                []byte            `protobuf:"bytes,5,opt,name=Foo3,proto3" json:"Foo3,omitempty"`
	SlicesStruct        *SlicesStruct     `protobuf:"bytes,6,opt,name=SlicesStruct,proto3" json:"SlicesStruct,omitempty"`
	Foo4                bool              `protobuf:"varint,7,opt,name=Foo4,proto3" json:"Foo4,omitempty"`
	PointersStructField *PointersStruct   `protobuf:"bytes,8,opt,name=PointersStructField,proto3" json:"PointersStructField,omitempty"`
	Foo5                uint64            `protobuf:"varint,9,opt,name=Foo5,proto3" json:"Foo5,omitempty"`
}

func (x *EmbeddedSt5) Reset() {
	*x = EmbeddedSt5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddedSt5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddedSt5) ProtoMessage() {}

func (x *EmbeddedSt5) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddedSt5.ProtoReflect.Descriptor instead.
func (*EmbeddedSt5) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{13}
}

func (x *EmbeddedSt5) GetFoo1() int64 {
	if x != nil {
		return x.Foo1
	}
	return 0
}

func (x *EmbeddedSt5) GetPrimitivesStruct() *PrimitivesStruct {
	if x != nil {
		return x.PrimitivesStruct
	}
	return nil
}

func (x *EmbeddedSt5) GetFoo2() string {
	if x != nil {
		return x.Foo2
	}
	return ""
}

func (x *EmbeddedSt5) GetArraysStructField() *ArraysStruct {
	if x != nil {
		return x.ArraysStructField
	}
	return nil
}

func (x *EmbeddedSt5) GetFoo3() []byte {
	if x != nil {
		return x.Foo3
	}
	return nil
}

func (x *EmbeddedSt5) GetSlicesStruct() *SlicesStruct {
	if x != nil {
		return x.SlicesStruct
	}
	return nil
}

func (x *EmbeddedSt5) GetFoo4() bool {
	if x != nil {
		return x.Foo4
	}
	return false
}

func (x *EmbeddedSt5) GetPointersStructField() *PointersStruct {
	if x != nil {
		return x.PointersStructField
	}
	return nil
}

func (x *EmbeddedSt5) GetFoo5() uint64 {
	if x != nil {
		return x.Foo5
	}
	return 0
}

type IntDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"zigzag64,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *IntDef) Reset() {
	*x = IntDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntDef) ProtoMessage() {}

func (x *IntDef) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntDef.ProtoReflect.Descriptor instead.
func (*IntDef) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{14}
}

func (x *IntDef) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type IntAr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []int64 `protobuf:"zigzag64,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *IntAr) Reset() {
	*x = IntAr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntAr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntAr) ProtoMessage() {}

func (x *IntAr) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntAr.ProtoReflect.Descriptor instead.
func (*IntAr) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{15}
}

func (x *IntAr) GetValue() []int64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type IntSl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []int64 `protobuf:"zigzag64,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *IntSl) Reset() {
	*x = IntSl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntSl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntSl) ProtoMessage() {}

func (x *IntSl) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntSl.ProtoReflect.Descriptor instead.
func (*IntSl) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{16}
}

func (x *IntSl) GetValue() []int64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type ByteAr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ByteAr) Reset() {
	*x = ByteAr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByteAr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteAr) ProtoMessage() {}

func (x *ByteAr) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteAr.ProtoReflect.Descriptor instead.
func (*ByteAr) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{17}
}

func (x *ByteAr) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ByteSl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ByteSl) Reset() {
	*x = ByteSl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByteSl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteSl) ProtoMessage() {}

func (x *ByteSl) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteSl.ProtoReflect.Descriptor instead.
func (*ByteSl) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{18}
}

func (x *ByteSl) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type PrimitivesStructDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int8        int32                `protobuf:"zigzag32,1,opt,name=Int8,proto3" json:"Int8,omitempty"`
	Int16       int32                `protobuf:"zigzag32,2,opt,name=Int16,proto3" json:"Int16,omitempty"`
	Int32       int32                `protobuf:"zigzag32,3,opt,name=Int32,proto3" json:"Int32,omitempty"`
	Int32Fixed  int32                `protobuf:"fixed32,4,opt,name=Int32Fixed,proto3" json:"Int32Fixed,omitempty"`
	Int64       int64                `protobuf:"zigzag64,5,opt,name=Int64,proto3" json:"Int64,omitempty"`
	Int64Fixed  int64                `protobuf:"fixed64,6,opt,name=Int64Fixed,proto3" json:"Int64Fixed,omitempty"`
	Int         int64                `protobuf:"zigzag64,7,opt,name=Int,proto3" json:"Int,omitempty"`
	Byte        uint32               `protobuf:"varint,8,opt,name=Byte,proto3" json:"Byte,omitempty"`
	Uint8       uint32               `protobuf:"varint,9,opt,name=Uint8,proto3" json:"Uint8,omitempty"`
	Uint16      uint32               `protobuf:"varint,10,opt,name=Uint16,proto3" json:"Uint16,omitempty"`
	Uint32      uint32               `protobuf:"varint,11,opt,name=Uint32,proto3" json:"Uint32,omitempty"`
	Uint32Fixed uint32               `protobuf:"fixed32,12,opt,name=Uint32Fixed,proto3" json:"Uint32Fixed,omitempty"`
	Uint64      uint64               `protobuf:"varint,13,opt,name=Uint64,proto3" json:"Uint64,omitempty"`
	Uint64Fixed uint64               `protobuf:"fixed64,14,opt,name=Uint64Fixed,proto3" json:"Uint64Fixed,omitempty"`
	Uint        uint64               `protobuf:"varint,15,opt,name=Uint,proto3" json:"Uint,omitempty"`
	Str         string               `protobuf:"bytes,16,opt,name=Str,proto3" json:"Str,omitempty"`
	Bytes       []byte               `protobuf:"bytes,17,opt,name=Bytes,proto3" json:"Bytes,omitempty"`
	Time        *timestamp.Timestamp `protobuf:"bytes,18,opt,name=Time,proto3" json:"Time,omitempty"`
	Empty       *EmptyStruct         `protobuf:"bytes,19,opt,name=Empty,proto3" json:"Empty,omitempty"`
}

func (x *PrimitivesStructDef) Reset() {
	*x = PrimitivesStructDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimitivesStructDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimitivesStructDef) ProtoMessage() {}

func (x *PrimitivesStructDef) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimitivesStructDef.ProtoReflect.Descriptor instead.
func (*PrimitivesStructDef) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{19}
}

func (x *PrimitivesStructDef) GetInt8() int32 {
	if x != nil {
		return x.Int8
	}
	return 0
}

func (x *PrimitivesStructDef) GetInt16() int32 {
	if x != nil {
		return x.Int16
	}
	return 0
}

func (x *PrimitivesStructDef) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *PrimitivesStructDef) GetInt32Fixed() int32 {
	if x != nil {
		return x.Int32Fixed
	}
	return 0
}

func (x *PrimitivesStructDef) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *PrimitivesStructDef) GetInt64Fixed() int64 {
	if x != nil {
		return x.Int64Fixed
	}
	return 0
}

func (x *PrimitivesStructDef) GetInt() int64 {
	if x != nil {
		return x.Int
	}
	return 0
}

func (x *PrimitivesStructDef) GetByte() uint32 {
	if x != nil {
		return x.Byte
	}
	return 0
}

func (x *PrimitivesStructDef) GetUint8() uint32 {
	if x != nil {
		return x.Uint8
	}
	return 0
}

func (x *PrimitivesStructDef) GetUint16() uint32 {
	if x != nil {
		return x.Uint16
	}
	return 0
}

func (x *PrimitivesStructDef) GetUint32() uint32 {
	if x != nil {
		return x.Uint32
	}
	return 0
}

func (x *PrimitivesStructDef) GetUint32Fixed() uint32 {
	if x != nil {
		return x.Uint32Fixed
	}
	return 0
}

func (x *PrimitivesStructDef) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

func (x *PrimitivesStructDef) GetUint64Fixed() uint64 {
	if x != nil {
		return x.Uint64Fixed
	}
	return 0
}

func (x *PrimitivesStructDef) GetUint() uint64 {
	if x != nil {
		return x.Uint
	}
	return 0
}

func (x *PrimitivesStructDef) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *PrimitivesStructDef) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *PrimitivesStructDef) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *PrimitivesStructDef) GetEmpty() *EmptyStruct {
	if x != nil {
		return x.Empty
	}
	return nil
}

type PrimitivesStructSl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*PrimitivesStruct `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value,omitempty"`
}

func (x *PrimitivesStructSl) Reset() {
	*x = PrimitivesStructSl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimitivesStructSl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimitivesStructSl) ProtoMessage() {}

func (x *PrimitivesStructSl) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimitivesStructSl.ProtoReflect.Descriptor instead.
func (*PrimitivesStructSl) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{20}
}

func (x *PrimitivesStructSl) GetValue() []*PrimitivesStruct {
	if x != nil {
		return x.Value
	}
	return nil
}

type PrimitivesStructAr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*PrimitivesStruct `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value,omitempty"`
}

func (x *PrimitivesStructAr) Reset() {
	*x = PrimitivesStructAr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimitivesStructAr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimitivesStructAr) ProtoMessage() {}

func (x *PrimitivesStructAr) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimitivesStructAr.ProtoReflect.Descriptor instead.
func (*PrimitivesStructAr) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{21}
}

func (x *PrimitivesStructAr) GetValue() []*PrimitivesStruct {
	if x != nil {
		return x.Value
	}
	return nil
}

type Concrete1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Concrete1) Reset() {
	*x = Concrete1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Concrete1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Concrete1) ProtoMessage() {}

func (x *Concrete1) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Concrete1.ProtoReflect.Descriptor instead.
func (*Concrete1) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{22}
}

type Concrete2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Concrete2) Reset() {
	*x = Concrete2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Concrete2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Concrete2) ProtoMessage() {}

func (x *Concrete2) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Concrete2.ProtoReflect.Descriptor instead.
func (*Concrete2) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{23}
}

type ConcreteTypeDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ConcreteTypeDef) Reset() {
	*x = ConcreteTypeDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConcreteTypeDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConcreteTypeDef) ProtoMessage() {}

func (x *ConcreteTypeDef) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConcreteTypeDef.ProtoReflect.Descriptor instead.
func (*ConcreteTypeDef) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{24}
}

func (x *ConcreteTypeDef) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ConcreteWrappedBytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ConcreteWrappedBytes) Reset() {
	*x = ConcreteWrappedBytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConcreteWrappedBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConcreteWrappedBytes) ProtoMessage() {}

func (x *ConcreteWrappedBytes) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConcreteWrappedBytes.ProtoReflect.Descriptor instead.
func (*ConcreteWrappedBytes) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{25}
}

func (x *ConcreteWrappedBytes) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type InterfaceFieldsStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	F1 *any.Any `protobuf:"bytes,1,opt,name=F1,proto3" json:"F1,omitempty"`
	F2 *any.Any `protobuf:"bytes,2,opt,name=F2,proto3" json:"F2,omitempty"`
	F3 *any.Any `protobuf:"bytes,3,opt,name=F3,proto3" json:"F3,omitempty"`
	F4 *any.Any `protobuf:"bytes,4,opt,name=F4,proto3" json:"F4,omitempty"`
}

func (x *InterfaceFieldsStruct) Reset() {
	*x = InterfaceFieldsStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceFieldsStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceFieldsStruct) ProtoMessage() {}

func (x *InterfaceFieldsStruct) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceFieldsStruct.ProtoReflect.Descriptor instead.
func (*InterfaceFieldsStruct) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{26}
}

func (x *InterfaceFieldsStruct) GetF1() *any.Any {
	if x != nil {
		return x.F1
	}
	return nil
}

func (x *InterfaceFieldsStruct) GetF2() *any.Any {
	if x != nil {
		return x.F2
	}
	return nil
}

func (x *InterfaceFieldsStruct) GetF3() *any.Any {
	if x != nil {
		return x.F3
	}
	return nil
}

func (x *InterfaceFieldsStruct) GetF4() *any.Any {
	if x != nil {
		return x.F4
	}
	return nil
}

type BytesList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value [][]byte `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value,omitempty"`
}

func (x *BytesList) Reset() {
	*x = BytesList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesList) ProtoMessage() {}

func (x *BytesList) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesList.ProtoReflect.Descriptor instead.
func (*BytesList) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{27}
}

func (x *BytesList) GetValue() [][]byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type BytesListList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*BytesList `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value,omitempty"`
}

func (x *BytesListList) Reset() {
	*x = BytesListList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytesListList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesListList) ProtoMessage() {}

func (x *BytesListList) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesListList.ProtoReflect.Descriptor instead.
func (*BytesListList) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{28}
}

func (x *BytesListList) GetValue() []*BytesList {
	if x != nil {
		return x.Value
	}
	return nil
}

type IntList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []int64 `protobuf:"zigzag64,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *IntList) Reset() {
	*x = IntList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntList) ProtoMessage() {}

func (x *IntList) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntList.ProtoReflect.Descriptor instead.
func (*IntList) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{29}
}

func (x *IntList) GetValue() []int64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type Int16List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []int32 `protobuf:"zigzag32,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Int16List) Reset() {
	*x = Int16List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int16List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int16List) ProtoMessage() {}

func (x *Int16List) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int16List.ProtoReflect.Descriptor instead.
func (*Int16List) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{30}
}

func (x *Int16List) GetValue() []int32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type Fixed32Int32List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []int32 `protobuf:"fixed32,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Fixed32Int32List) Reset() {
	*x = Fixed32Int32List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fixed32Int32List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fixed32Int32List) ProtoMessage() {}

func (x *Fixed32Int32List) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fixed32Int32List.ProtoReflect.Descriptor instead.
func (*Fixed32Int32List) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{31}
}

func (x *Fixed32Int32List) GetValue() []int32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type Int32List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []int32 `protobuf:"zigzag32,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Int32List) Reset() {
	*x = Int32List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32List) ProtoMessage() {}

func (x *Int32List) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32List.ProtoReflect.Descriptor instead.
func (*Int32List) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{32}
}

func (x *Int32List) GetValue() []int32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type Int64List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []int64 `protobuf:"zigzag64,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Int64List) Reset() {
	*x = Int64List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int64List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int64List) ProtoMessage() {}

func (x *Int64List) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int64List.ProtoReflect.Descriptor instead.
func (*Int64List) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{33}
}

func (x *Int64List) GetValue() []int64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type Fixed64Int64List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []int64 `protobuf:"fixed64,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Fixed64Int64List) Reset() {
	*x = Fixed64Int64List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fixed64Int64List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fixed64Int64List) ProtoMessage() {}

func (x *Fixed64Int64List) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fixed64Int64List.ProtoReflect.Descriptor instead.
func (*Fixed64Int64List) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{34}
}

func (x *Fixed64Int64List) GetValue() []int64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type Int8List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []int32 `protobuf:"zigzag32,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Int8List) Reset() {
	*x = Int8List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int8List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int8List) ProtoMessage() {}

func (x *Int8List) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int8List.ProtoReflect.Descriptor instead.
func (*Int8List) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{35}
}

func (x *Int8List) GetValue() []int32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type StringList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []string `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value,omitempty"`
}

func (x *StringList) Reset() {
	*x = StringList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringList) ProtoMessage() {}

func (x *StringList) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringList.ProtoReflect.Descriptor instead.
func (*StringList) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{36}
}

func (x *StringList) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

type EmptyStructList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*EmptyStruct `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value,omitempty"`
}

func (x *EmptyStructList) Reset() {
	*x = EmptyStructList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyStructList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyStructList) ProtoMessage() {}

func (x *EmptyStructList) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyStructList.ProtoReflect.Descriptor instead.
func (*EmptyStructList) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{37}
}

func (x *EmptyStructList) GetValue() []*EmptyStruct {
	if x != nil {
		return x.Value
	}
	return nil
}

type TimeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*timestamp.Timestamp `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value,omitempty"`
}

func (x *TimeList) Reset() {
	*x = TimeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeList) ProtoMessage() {}

func (x *TimeList) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeList.ProtoReflect.Descriptor instead.
func (*TimeList) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{38}
}

func (x *TimeList) GetValue() []*timestamp.Timestamp {
	if x != nil {
		return x.Value
	}
	return nil
}

type UintList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []uint64 `protobuf:"varint,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *UintList) Reset() {
	*x = UintList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UintList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UintList) ProtoMessage() {}

func (x *UintList) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UintList.ProtoReflect.Descriptor instead.
func (*UintList) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{39}
}

func (x *UintList) GetValue() []uint64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type Uint16List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []uint32 `protobuf:"varint,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Uint16List) Reset() {
	*x = Uint16List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uint16List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint16List) ProtoMessage() {}

func (x *Uint16List) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint16List.ProtoReflect.Descriptor instead.
func (*Uint16List) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{40}
}

func (x *Uint16List) GetValue() []uint32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type Uint32List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []uint32 `protobuf:"varint,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Uint32List) Reset() {
	*x = Uint32List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uint32List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint32List) ProtoMessage() {}

func (x *Uint32List) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint32List.ProtoReflect.Descriptor instead.
func (*Uint32List) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{41}
}

func (x *Uint32List) GetValue() []uint32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type Fixed32Uint32List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []uint32 `protobuf:"fixed32,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Fixed32Uint32List) Reset() {
	*x = Fixed32Uint32List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fixed32Uint32List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fixed32Uint32List) ProtoMessage() {}

func (x *Fixed32Uint32List) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fixed32Uint32List.ProtoReflect.Descriptor instead.
func (*Fixed32Uint32List) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{42}
}

func (x *Fixed32Uint32List) GetValue() []uint32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type Uint64List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []uint64 `protobuf:"varint,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Uint64List) Reset() {
	*x = Uint64List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uint64List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint64List) ProtoMessage() {}

func (x *Uint64List) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint64List.ProtoReflect.Descriptor instead.
func (*Uint64List) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{43}
}

func (x *Uint64List) GetValue() []uint64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type Fixed64Uint64List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []uint64 `protobuf:"fixed64,1,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Fixed64Uint64List) Reset() {
	*x = Fixed64Uint64List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fixed64Uint64List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fixed64Uint64List) ProtoMessage() {}

func (x *Fixed64Uint64List) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fixed64Uint64List.ProtoReflect.Descriptor instead.
func (*Fixed64Uint64List) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{44}
}

func (x *Fixed64Uint64List) GetValue() []uint64 {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_types_proto protoreflect.FileDescriptor

var file_types_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74,
	0x65, 0x73, 0x74, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x0d, 0x0a, 0x0b, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22,
	0x86, 0x04, 0x0a, 0x10, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x74, 0x38, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x04, 0x49, 0x6e, 0x74, 0x38, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x31,
	0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x49, 0x6e, 0x74, 0x31, 0x36, 0x12, 0x14,
	0x0a, 0x05, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x0a, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x05, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x10, 0x52, 0x0a,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x03, 0x49, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x42, 0x79, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x42, 0x79, 0x74, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x55, 0x69, 0x6e, 0x74, 0x38, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x55, 0x69, 0x6e, 0x74, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x36,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0b, 0x55, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x20, 0x0a, 0x0b, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x74, 0x72, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x47, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x32, 0x0a,
	0x06, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x54, 0x69, 0x6d, 0x65, 0x41,
	0x72, 0x22, 0xce, 0x04, 0x0a, 0x0c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6e, 0x74, 0x38, 0x41, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x11, 0x52, 0x06, 0x49, 0x6e, 0x74, 0x38, 0x41, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e,
	0x74, 0x31, 0x36, 0x41, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x11, 0x52, 0x07, 0x49, 0x6e, 0x74,
	0x31, 0x36, 0x41, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x11, 0x52, 0x07, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0f, 0x52, 0x0c, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x41, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x41, 0x72, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x12, 0x52, 0x07, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x41, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x10, 0x52, 0x0c, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x41, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x12, 0x52,
	0x05, 0x49, 0x6e, 0x74, 0x41, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x55, 0x69, 0x6e, 0x74, 0x38, 0x41, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x55, 0x69, 0x6e, 0x74, 0x38, 0x41, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x69, 0x6e, 0x74,
	0x31, 0x36, 0x41, 0x72, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x55, 0x69, 0x6e, 0x74,
	0x31, 0x36, 0x41, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41,
	0x72, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x07, 0x52, 0x0d, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x41, 0x72, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x41, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x41, 0x72, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x06, 0x52, 0x0d, 0x55, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x69, 0x6e, 0x74,
	0x41, 0x72, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x41, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x72, 0x41, 0x72, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x53, 0x74, 0x72, 0x41, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x79, 0x74, 0x65, 0x73, 0x41,
	0x72, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x42, 0x79, 0x74, 0x65, 0x73, 0x41, 0x72,
	0x12, 0x32, 0x0a, 0x06, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x72, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x54, 0x69,
	0x6d, 0x65, 0x41, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x18,
	0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x41, 0x72, 0x22, 0xc5, 0x07, 0x0a, 0x12, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x49, 0x6e, 0x74,
	0x38, 0x41, 0x72, 0x41, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x38, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x49, 0x6e,
	0x74, 0x38, 0x41, 0x72, 0x41, 0x72, 0x12, 0x2e, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x31, 0x36, 0x41,
	0x72, 0x41, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x49, 0x6e, 0x74, 0x31, 0x36, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x49, 0x6e, 0x74,
	0x31, 0x36, 0x41, 0x72, 0x41, 0x72, 0x12, 0x2e, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x41,
	0x72, 0x41, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x41, 0x72, 0x41, 0x72, 0x12, 0x3f, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x41, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x41, 0x72, 0x41, 0x72, 0x12, 0x2e, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x41, 0x72, 0x41, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x41, 0x72, 0x41, 0x72, 0x12, 0x3f, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x41, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x41, 0x72, 0x12, 0x28, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x41,
	0x72, 0x41, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x49, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x49, 0x6e, 0x74, 0x41, 0x72,
	0x41, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x41, 0x72, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x41, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x55, 0x69, 0x6e, 0x74, 0x38, 0x41, 0x72, 0x41, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x09, 0x55, 0x69, 0x6e, 0x74, 0x38, 0x41, 0x72, 0x41, 0x72, 0x12, 0x31, 0x0a, 0x0a,
	0x55, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x41, 0x72, 0x41, 0x72, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x0a, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x41, 0x72, 0x41, 0x72, 0x12,
	0x31, 0x0a, 0x0a, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72, 0x41, 0x72, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x55, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72,
	0x41, 0x72, 0x12, 0x42, 0x0a, 0x0f, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x41, 0x72, 0x41, 0x72, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x55, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0f, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x41, 0x72, 0x41, 0x72, 0x12, 0x31, 0x0a, 0x0a, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x41, 0x72, 0x41, 0x72, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x55,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x41, 0x72, 0x41, 0x72, 0x12, 0x42, 0x0a, 0x0f, 0x55, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x41, 0x72, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x36, 0x34, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0f, 0x55, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x41, 0x72, 0x12, 0x2b, 0x0a,
	0x08, 0x55, 0x69, 0x6e, 0x74, 0x41, 0x72, 0x41, 0x72, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x41, 0x72, 0x41, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x53, 0x74,
	0x72, 0x41, 0x72, 0x41, 0x72, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07,
	0x53, 0x74, 0x72, 0x41, 0x72, 0x41, 0x72, 0x12, 0x2e, 0x0a, 0x09, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x41, 0x72, 0x41, 0x72, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x41, 0x72, 0x41, 0x72, 0x12, 0x2b, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x41,
	0x72, 0x41, 0x72, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x54, 0x69, 0x6d, 0x65,
	0x41, 0x72, 0x41, 0x72, 0x12, 0x34, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x41,
	0x72, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x41, 0x72, 0x22, 0xce, 0x04, 0x0a, 0x0c, 0x53,
	0x6c, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49,
	0x6e, 0x74, 0x38, 0x53, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x11, 0x52, 0x06, 0x49, 0x6e, 0x74,
	0x38, 0x53, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x31, 0x36, 0x53, 0x6c, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x11, 0x52, 0x07, 0x49, 0x6e, 0x74, 0x31, 0x36, 0x53, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x53, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x11, 0x52, 0x07,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x53, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x53, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x0c, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x53, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x53, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x12, 0x52, 0x07, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x53, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x53, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x10, 0x52, 0x0c, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x53, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x74,
	0x53, 0x6c, 0x18, 0x07, 0x20, 0x03, 0x28, 0x12, 0x52, 0x05, 0x49, 0x6e, 0x74, 0x53, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x42, 0x79, 0x74, 0x65, 0x53, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x42, 0x79, 0x74, 0x65, 0x53, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x69, 0x6e, 0x74, 0x38,
	0x53, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x55, 0x69, 0x6e, 0x74, 0x38, 0x53,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x53, 0x6c, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x53, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x53, 0x6c, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x08, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x53, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x53, 0x6c, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x07,
	0x52, 0x0d, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x53, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x53, 0x6c, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x53, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x55,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x53, 0x6c, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x06, 0x52, 0x0d, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x53,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x53, 0x6c, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x53, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x72,
	0x53, 0x6c, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x72, 0x53, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x42, 0x79, 0x74, 0x65, 0x73, 0x53, 0x6c, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x07, 0x42, 0x79, 0x74, 0x65, 0x73, 0x53, 0x6c, 0x12, 0x32, 0x0a, 0x06, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x6c, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x12, 0x2c, 0x0a,
	0x07, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x6c, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x07, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x6c, 0x22, 0xd0, 0x04, 0x0a, 0x0e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x49, 0x6e, 0x74, 0x38, 0x50, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06,
	0x49, 0x6e, 0x74, 0x38, 0x50, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x31, 0x36, 0x50,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x49, 0x6e, 0x74, 0x31, 0x36, 0x50, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x50, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x07, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x50, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0f,
	0x52, 0x0c, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x50, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x07, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x50, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x10, 0x52, 0x0c,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x49, 0x6e, 0x74, 0x50, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x49, 0x6e, 0x74,
	0x50, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x79, 0x74, 0x65, 0x50, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x42, 0x79, 0x74, 0x65, 0x50, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x69,
	0x6e, 0x74, 0x38, 0x50, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x55, 0x69, 0x6e,
	0x74, 0x38, 0x50, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x50, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x50, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x50, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x50, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x0d, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x50, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x50, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x50, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x50, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x50, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x50, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x74, 0x72, 0x50, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x72,
	0x50, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x74, 0x12, 0x32, 0x0a, 0x06,
	0x54, 0x69, 0x6d, 0x65, 0x50, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x74,
	0x12, 0x2c, 0x0a, 0x07, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x74, 0x22, 0xa1,
	0x05, 0x0a, 0x13, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x38, 0x50, 0x74,
	0x53, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x11, 0x52, 0x08, 0x49, 0x6e, 0x74, 0x38, 0x50, 0x74,
	0x53, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x31, 0x36, 0x50, 0x74, 0x53, 0x6c, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x11, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x31, 0x36, 0x50, 0x74, 0x53, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x50, 0x74, 0x53, 0x6c, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x11, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x50, 0x74, 0x53, 0x6c, 0x12, 0x26,
	0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x74, 0x53, 0x6c,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x0e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x50, 0x74, 0x53, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x50,
	0x74, 0x53, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x12, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x50, 0x74, 0x53, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x50, 0x74, 0x53, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x10, 0x52, 0x0e, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x74, 0x53, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x49, 0x6e, 0x74, 0x50, 0x74, 0x53, 0x6c, 0x18, 0x07, 0x20, 0x03, 0x28, 0x12, 0x52, 0x07, 0x49,
	0x6e, 0x74, 0x50, 0x74, 0x53, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x79, 0x74, 0x65, 0x50, 0x74,
	0x53, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x42, 0x79, 0x74, 0x65, 0x50, 0x74,
	0x53, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x69, 0x6e, 0x74, 0x38, 0x50, 0x74, 0x53, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x55, 0x69, 0x6e, 0x74, 0x38, 0x50, 0x74, 0x53, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x50, 0x74, 0x53, 0x6c, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x50, 0x74, 0x53, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x50, 0x74, 0x53, 0x6c, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x50, 0x74, 0x53, 0x6c,
	0x12, 0x28, 0x0a, 0x0f, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50,
	0x74, 0x53, 0x6c, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x07, 0x52, 0x0f, 0x55, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x74, 0x53, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x50, 0x74, 0x53, 0x6c, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a,
	0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x50, 0x74, 0x53, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x55, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x74, 0x53, 0x6c, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x06, 0x52, 0x0f, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x50, 0x74, 0x53, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x50, 0x74, 0x53, 0x6c,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x50, 0x74, 0x53, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x72, 0x50, 0x74, 0x53, 0x6c, 0x18, 0x10, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x53, 0x74, 0x72, 0x50, 0x74, 0x53, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x50, 0x74, 0x53, 0x6c, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x50, 0x74, 0x53, 0x6c, 0x12, 0x36, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65,
	0x50, 0x74, 0x53, 0x6c, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x74, 0x53, 0x6c,
	0x12, 0x30, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x74, 0x53, 0x6c, 0x18, 0x13, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x74,
	0x53, 0x6c, 0x22, 0xcd, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x53, 0x74,
	0x12, 0x31, 0x0a, 0x07, 0x50, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x50, 0x72, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x41, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x41, 0x72, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x53, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x6c, 0x69, 0x63,
	0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x53, 0x6c, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x2f, 0x0a, 0x07, 0x50, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x50, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x22, 0x52, 0x0a, 0x0b, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x53, 0x74,
	0x31, 0x12, 0x43, 0x0a, 0x10, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x10, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x83, 0x02, 0x0a, 0x0b, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x65, 0x64, 0x53, 0x74, 0x32, 0x12, 0x43, 0x0a, 0x10, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x10, 0x50, 0x72, 0x69, 0x6d, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x0c, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x3d, 0x0a,
	0x0e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xb9, 0x02, 0x0a,
	0x0b, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x53, 0x74, 0x33, 0x12, 0x43, 0x0a, 0x10,
	0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x50,
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x10, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x37, 0x0a, 0x0c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x53, 0x6c,
	0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x0e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xfb, 0x02, 0x0a, 0x0b, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x65, 0x64, 0x53, 0x74, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x04, 0x46, 0x6f, 0x6f, 0x31, 0x12, 0x43, 0x0a, 0x10,
	0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x50,
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x10, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x46, 0x6f, 0x6f, 0x32, 0x12, 0x41, 0x0a, 0x11, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x11, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x33,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x46, 0x6f, 0x6f, 0x33, 0x12, 0x37, 0x0a, 0x0c,
	0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x34, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x46, 0x6f, 0x6f, 0x34, 0x12, 0x47, 0x0a, 0x13, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x13, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x35, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x46, 0x6f, 0x6f, 0x35, 0x22, 0xfb, 0x02, 0x0a, 0x0b, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x65, 0x64, 0x53, 0x74, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x04, 0x46, 0x6f, 0x6f, 0x31, 0x12, 0x43, 0x0a, 0x10, 0x50, 0x72,
	0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x69,
	0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x10, 0x50,
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46,
	0x6f, 0x6f, 0x32, 0x12, 0x41, 0x0a, 0x11, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x11, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x33, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x46, 0x6f, 0x6f, 0x33, 0x12, 0x37, 0x0a, 0x0c, 0x53, 0x6c,
	0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x46, 0x6f, 0x6f, 0x34, 0x12, 0x47, 0x0a, 0x13, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x13, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x35, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x46, 0x6f, 0x6f, 0x35, 0x22, 0x1e, 0x0a, 0x06, 0x49, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x12, 0x14,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x1d, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x41, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x12, 0x52, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x1d, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x53, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x12, 0x52, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x1e, 0x0a, 0x06, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x1e, 0x0a, 0x06, 0x42, 0x79, 0x74, 0x65, 0x53, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x89, 0x04, 0x0a, 0x13, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x44, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e,
	0x74, 0x38, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x04, 0x49, 0x6e, 0x74, 0x38, 0x12, 0x14,
	0x0a, 0x05, 0x49, 0x6e, 0x74, 0x31, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x49,
	0x6e, 0x74, 0x31, 0x36, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x05, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x0a,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x10, 0x52, 0x0a, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x49, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x03, 0x49,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x79, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x42, 0x79, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x69, 0x6e, 0x74, 0x38, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x55, 0x69, 0x6e, 0x74, 0x38, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x69,
	0x6e, 0x74, 0x31, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x20, 0x0a, 0x0b,
	0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x07, 0x52, 0x0b, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x55, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x69, 0x6e, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x53, 0x74, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x74, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x43,
	0x0a, 0x12, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x53, 0x6c, 0x12, 0x2d, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x6d,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x43, 0x0a, 0x12, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x41, 0x72, 0x12, 0x2d, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73,
	0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x0b, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x63,
	0x72, 0x65, 0x74, 0x65, 0x31, 0x22, 0x0b, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x63, 0x72, 0x65, 0x74,
	0x65, 0x32, 0x22, 0x27, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x63, 0x72, 0x65, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x14, 0x43,
	0x6f, 0x6e, 0x63, 0x72, 0x65, 0x74, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x15, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x46, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x02, 0x46, 0x31, 0x12, 0x24, 0x0a, 0x02, 0x46, 0x32, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x02, 0x46, 0x32, 0x12,
	0x24, 0x0a, 0x02, 0x46, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x02, 0x46, 0x33, 0x12, 0x24, 0x0a, 0x02, 0x46, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x02, 0x46, 0x34, 0x22, 0x21, 0x0a, 0x09, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37,
	0x0a, 0x0d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x12, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x21, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x31,
	0x36, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x11, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x10, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x21, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x11, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x21, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x12, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x10, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x10, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x20, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x38, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x11,
	0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x0f, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x20, 0x0a, 0x08, 0x55, 0x69, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a, 0x0a, 0x55, 0x69, 0x6e, 0x74,
	0x31, 0x36, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a, 0x0a,
	0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x29, 0x0a, 0x11, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x55, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x07, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a, 0x0a, 0x55,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x29, 0x0a, 0x11, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x06, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x74, 0x2f, 0x67, 0x6f, 0x2d, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_proto_rawDescOnce sync.Once
	file_types_proto_rawDescData = file_types_proto_rawDesc
)

func file_types_proto_rawDescGZIP() []byte {
	file_types_proto_rawDescOnce.Do(func() {
		file_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_proto_rawDescData)
	})
	return file_types_proto_rawDescData
}

var file_types_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_types_proto_goTypes = []interface{}{
	(*EmptyStruct)(nil),           // 0: tests.EmptyStruct
	(*PrimitivesStruct)(nil),      // 1: tests.PrimitivesStruct
	(*ShortArraysStruct)(nil),     // 2: tests.ShortArraysStruct
	(*ArraysStruct)(nil),          // 3: tests.ArraysStruct
	(*ArraysArraysStruct)(nil),    // 4: tests.ArraysArraysStruct
	(*SlicesStruct)(nil),          // 5: tests.SlicesStruct
	(*PointersStruct)(nil),        // 6: tests.PointersStruct
	(*PointerSlicesStruct)(nil),   // 7: tests.PointerSlicesStruct
	(*ComplexSt)(nil),             // 8: tests.ComplexSt
	(*EmbeddedSt1)(nil),           // 9: tests.EmbeddedSt1
	(*EmbeddedSt2)(nil),           // 10: tests.EmbeddedSt2
	(*EmbeddedSt3)(nil),           // 11: tests.EmbeddedSt3
	(*EmbeddedSt4)(nil),           // 12: tests.EmbeddedSt4
	(*EmbeddedSt5)(nil),           // 13: tests.EmbeddedSt5
	(*IntDef)(nil),                // 14: tests.IntDef
	(*IntAr)(nil),                 // 15: tests.IntAr
	(*IntSl)(nil),                 // 16: tests.IntSl
	(*ByteAr)(nil),                // 17: tests.ByteAr
	(*ByteSl)(nil),                // 18: tests.ByteSl
	(*PrimitivesStructDef)(nil),   // 19: tests.PrimitivesStructDef
	(*PrimitivesStructSl)(nil),    // 20: tests.PrimitivesStructSl
	(*PrimitivesStructAr)(nil),    // 21: tests.PrimitivesStructAr
	(*Concrete1)(nil),             // 22: tests.Concrete1
	(*Concrete2)(nil),             // 23: tests.Concrete2
	(*ConcreteTypeDef)(nil),       // 24: tests.ConcreteTypeDef
	(*ConcreteWrappedBytes)(nil),  // 25: tests.ConcreteWrappedBytes
	(*InterfaceFieldsStruct)(nil), // 26: tests.InterfaceFieldsStruct
	(*BytesList)(nil),             // 27: tests.BytesList
	(*BytesListList)(nil),         // 28: tests.BytesListList
	(*IntList)(nil),               // 29: tests.IntList
	(*Int16List)(nil),             // 30: tests.Int16List
	(*Fixed32Int32List)(nil),      // 31: tests.Fixed32Int32List
	(*Int32List)(nil),             // 32: tests.Int32List
	(*Int64List)(nil),             // 33: tests.Int64List
	(*Fixed64Int64List)(nil),      // 34: tests.Fixed64Int64List
	(*Int8List)(nil),              // 35: tests.Int8List
	(*StringList)(nil),            // 36: tests.StringList
	(*EmptyStructList)(nil),       // 37: tests.EmptyStructList
	(*TimeList)(nil),              // 38: tests.TimeList
	(*UintList)(nil),              // 39: tests.UintList
	(*Uint16List)(nil),            // 40: tests.Uint16List
	(*Uint32List)(nil),            // 41: tests.Uint32List
	(*Fixed32Uint32List)(nil),     // 42: tests.Fixed32Uint32List
	(*Uint64List)(nil),            // 43: tests.Uint64List
	(*Fixed64Uint64List)(nil),     // 44: tests.Fixed64Uint64List
	(*timestamp.Timestamp)(nil),   // 45: google.protobuf.Timestamp
	(*any.Any)(nil),               // 46: google.protobuf.Any
}
var file_types_proto_depIdxs = []int32{
	45, // 0: tests.PrimitivesStruct.Time:type_name -> google.protobuf.Timestamp
	0,  // 1: tests.PrimitivesStruct.Empty:type_name -> tests.EmptyStruct
	45, // 2: tests.ShortArraysStruct.TimeAr:type_name -> google.protobuf.Timestamp
	45, // 3: tests.ArraysStruct.TimeAr:type_name -> google.protobuf.Timestamp
	0,  // 4: tests.ArraysStruct.EmptyAr:type_name -> tests.EmptyStruct
	35, // 5: tests.ArraysArraysStruct.Int8ArAr:type_name -> tests.Int8List
	30, // 6: tests.ArraysArraysStruct.Int16ArAr:type_name -> tests.Int16List
	32, // 7: tests.ArraysArraysStruct.Int32ArAr:type_name -> tests.Int32List
	31, // 8: tests.ArraysArraysStruct.Int32FixedArAr:type_name -> tests.Fixed32Int32List
	33, // 9: tests.ArraysArraysStruct.Int64ArAr:type_name -> tests.Int64List
	34, // 10: tests.ArraysArraysStruct.Int64FixedArAr:type_name -> tests.Fixed64Int64List
	29, // 11: tests.ArraysArraysStruct.IntArAr:type_name -> tests.IntList
	40, // 12: tests.ArraysArraysStruct.Uint16ArAr:type_name -> tests.Uint16List
	41, // 13: tests.ArraysArraysStruct.Uint32ArAr:type_name -> tests.Uint32List
	42, // 14: tests.ArraysArraysStruct.Uint32FixedArAr:type_name -> tests.Fixed32Uint32List
	43, // 15: tests.ArraysArraysStruct.Uint64ArAr:type_name -> tests.Uint64List
	44, // 16: tests.ArraysArraysStruct.Uint64FixedArAr:type_name -> tests.Fixed64Uint64List
	39, // 17: tests.ArraysArraysStruct.UintArAr:type_name -> tests.UintList
	36, // 18: tests.ArraysArraysStruct.StrArAr:type_name -> tests.StringList
	27, // 19: tests.ArraysArraysStruct.BytesArAr:type_name -> tests.BytesList
	38, // 20: tests.ArraysArraysStruct.TimeArAr:type_name -> tests.TimeList
	37, // 21: tests.ArraysArraysStruct.EmptyArAr:type_name -> tests.EmptyStructList
	45, // 22: tests.SlicesStruct.TimeSl:type_name -> google.protobuf.Timestamp
	0,  // 23: tests.SlicesStruct.EmptySl:type_name -> tests.EmptyStruct
	45, // 24: tests.PointersStruct.TimePt:type_name -> google.protobuf.Timestamp
	0,  // 25: tests.PointersStruct.EmptyPt:type_name -> tests.EmptyStruct
	45, // 26: tests.PointerSlicesStruct.TimePtSl:type_name -> google.protobuf.Timestamp
	0,  // 27: tests.PointerSlicesStruct.EmptyPtSl:type_name -> tests.EmptyStruct
	1,  // 28: tests.ComplexSt.PrField:type_name -> tests.PrimitivesStruct
	3,  // 29: tests.ComplexSt.ArField:type_name -> tests.ArraysStruct
	5,  // 30: tests.ComplexSt.SlField:type_name -> tests.SlicesStruct
	6,  // 31: tests.ComplexSt.PtField:type_name -> tests.PointersStruct
	1,  // 32: tests.EmbeddedSt1.PrimitivesStruct:type_name -> tests.PrimitivesStruct
	1,  // 33: tests.EmbeddedSt2.PrimitivesStruct:type_name -> tests.PrimitivesStruct
	3,  // 34: tests.EmbeddedSt2.ArraysStruct:type_name -> tests.ArraysStruct
	5,  // 35: tests.EmbeddedSt2.SlicesStruct:type_name -> tests.SlicesStruct
	6,  // 36: tests.EmbeddedSt2.PointersStruct:type_name -> tests.PointersStruct
	1,  // 37: tests.EmbeddedSt3.PrimitivesStruct:type_name -> tests.PrimitivesStruct
	3,  // 38: tests.EmbeddedSt3.ArraysStruct:type_name -> tests.ArraysStruct
	5,  // 39: tests.EmbeddedSt3.SlicesStruct:type_name -> tests.SlicesStruct
	6,  // 40: tests.EmbeddedSt3.PointersStruct:type_name -> tests.PointersStruct
	0,  // 41: tests.EmbeddedSt3.EmptyStruct:type_name -> tests.EmptyStruct
	1,  // 42: tests.EmbeddedSt4.PrimitivesStruct:type_name -> tests.PrimitivesStruct
	3,  // 43: tests.EmbeddedSt4.ArraysStructField:type_name -> tests.ArraysStruct
	5,  // 44: tests.EmbeddedSt4.SlicesStruct:type_name -> tests.SlicesStruct
	6,  // 45: tests.EmbeddedSt4.PointersStructField:type_name -> tests.PointersStruct
	1,  // 46: tests.EmbeddedSt5.PrimitivesStruct:type_name -> tests.PrimitivesStruct
	3,  // 47: tests.EmbeddedSt5.ArraysStructField:type_name -> tests.ArraysStruct
	5,  // 48: tests.EmbeddedSt5.SlicesStruct:type_name -> tests.SlicesStruct
	6,  // 49: tests.EmbeddedSt5.PointersStructField:type_name -> tests.PointersStruct
	45, // 50: tests.PrimitivesStructDef.Time:type_name -> google.protobuf.Timestamp
	0,  // 51: tests.PrimitivesStructDef.Empty:type_name -> tests.EmptyStruct
	1,  // 52: tests.PrimitivesStructSl.Value:type_name -> tests.PrimitivesStruct
	1,  // 53: tests.PrimitivesStructAr.Value:type_name -> tests.PrimitivesStruct
	46, // 54: tests.InterfaceFieldsStruct.F1:type_name -> google.protobuf.Any
	46, // 55: tests.InterfaceFieldsStruct.F2:type_name -> google.protobuf.Any
	46, // 56: tests.InterfaceFieldsStruct.F3:type_name -> google.protobuf.Any
	46, // 57: tests.InterfaceFieldsStruct.F4:type_name -> google.protobuf.Any
	27, // 58: tests.BytesListList.Value:type_name -> tests.BytesList
	0,  // 59: tests.EmptyStructList.Value:type_name -> tests.EmptyStruct
	45, // 60: tests.TimeList.Value:type_name -> google.protobuf.Timestamp
	61, // [61:61] is the sub-list for method output_type
	61, // [61:61] is the sub-list for method input_type
	61, // [61:61] is the sub-list for extension type_name
	61, // [61:61] is the sub-list for extension extendee
	0,  // [0:61] is the sub-list for field type_name
}

func init() { file_types_proto_init() }
func file_types_proto_init() {
	if File_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrimitivesStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortArraysStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArraysStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArraysArraysStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlicesStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointersStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointerSlicesStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplexSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddedSt1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddedSt2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddedSt3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddedSt4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddedSt5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntAr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntSl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByteAr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByteSl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrimitivesStructDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrimitivesStructSl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrimitivesStructAr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Concrete1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Concrete2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConcreteTypeDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConcreteWrappedBytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceFieldsStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytesList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytesListList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int16List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fixed32Int32List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int32List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int64List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fixed64Int64List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int8List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyStructList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UintList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uint16List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uint32List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fixed32Uint32List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uint64List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fixed64Uint64List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_proto_goTypes,
		DependencyIndexes: file_types_proto_depIdxs,
		MessageInfos:      file_types_proto_msgTypes,
	}.Build()
	File_types_proto = out.File
	file_types_proto_rawDesc = nil
	file_types_proto_goTypes = nil
	file_types_proto_depIdxs = nil
}
